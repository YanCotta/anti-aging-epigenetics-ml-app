"""
LiveMore V3 - Preditor de Idade Biol√≥gica com IA Explic√°vel  
=============================================================
Aplicativo em Portugu√™s Brasileiro com 5 SNPs validados e resultados realistas.

Performance do Modelo:
- R¬≤ de Treinamento: 0.9191
- MAE (Erro M√©dio Absoluto): 2.79 anos
- RMSE: 3.82 anos

Features: 13 entradas (demografia, 5 SNPs, estilo de vida, fatores de risco)
Tecnologia: Random Forest + SHAP (IA Explic√°vel)
"""

import os
import streamlit as st
import pandas as pd
import numpy as np
import joblib
import shap
import matplotlib.pyplot as plt

# ==========================
# Configura√ß√£o
# ==========================

st.set_page_config(
    page_title="LiveMore - Preditor de Idade Biol√≥gica",
    page_icon="üß¨",
    layout="centered"
)

MODEL_DIR = os.path.join(os.path.dirname(__file__), "app_model")

# ==========================
# Carregar Modelo
# ==========================

@st.cache_resource
def load_model_artifacts():
    """Carrega modelo Random Forest, scaler e explainer SHAP."""
    try:
        model_path = os.path.join(MODEL_DIR, "livemore_rf_v2.joblib")
        scaler_path = os.path.join(MODEL_DIR, "livemore_scaler_v2.joblib")
        explainer_path = os.path.join(MODEL_DIR, "livemore_explainer_v2.pkl")
        
        model = joblib.load(model_path)
        scaler = joblib.load(scaler_path)
        explainer = joblib.load(explainer_path)
        
        return model, scaler, explainer
    except FileNotFoundError as e:
        st.error(f"‚ùå Modelo n√£o encontrado: {e}")
        st.info("Verifique se os arquivos do modelo est√£o em `antiaging-mvp/streamlit_app/app_model/`")
        st.stop()

model, scaler, explainer = load_model_artifacts()

# ==========================
# Defini√ß√µes de Features
# ==========================

FEATURES = [
    'age', 'gender', 'APOE_rs429358', 'FOXO3_rs2802292', 'TP53_rs1042522', 
    'SIRT1_rs7069102', 'TERT_rs2736100', 'exercise_hours_week', 
    'diet_quality_score', 'sleep_hours', 'stress_level', 
    'smoking_pack_years', 'alcohol_drinks_week'
]

NAMES_PT = {
    'age': 'Idade', 
    'gender': 'Sexo', 
    'APOE_rs429358': 'APOE Œµ4', 
    'FOXO3_rs2802292': 'FOXO3', 
    'TP53_rs1042522': 'TP53',
    'SIRT1_rs7069102': 'SIRT1', 
    'TERT_rs2736100': 'TERT', 
    'exercise_hours_week': 'Exerc√≠cio', 
    'diet_quality_score': 'Dieta',
    'sleep_hours': 'Sono', 
    'stress_level': 'Estresse', 
    'smoking_pack_years': 'Tabagismo', 
    'alcohol_drinks_week': '√Ålcool'
}

# Informa√ß√µes detalhadas sobre cada SNP
SNP_INFO = {
    'APOE_rs429358': {
        'nome': 'APOE Œµ4',
        'gene': 'APOE (Apolipoprote√≠na E)',
        'funcao': 'Risco de Alzheimer e envelhecimento cognitivo',
        'opcoes': ['Œµ2/Œµ3 (Protetor)', 'Œµ3/Œµ3 (Neutro)', 'Œµ4+ (Risco Alzheimer)'],
        'valores': [0, 1, 2]
    },
    'FOXO3_rs2802292': {
        'nome': 'FOXO3',
        'gene': 'FOXO3 (Forkhead Box O3)',
        'funcao': 'Gene da longevidade - resist√™ncia ao estresse oxidativo',
        'opcoes': ['G/G (Longevidade)', 'G/T (Neutro)', 'T/T (Padr√£o)'],
        'valores': [0, 1, 2]
    },
    'TP53_rs1042522': {
        'nome': 'TP53',
        'gene': 'TP53 (Prote√≠na Tumoral 53)',
        'funcao': 'Reparo de DNA e supress√£o tumoral',
        'opcoes': ['Pro/Pro (Reparo+)', 'Pro/Arg (Neutro)', 'Arg/Arg (Padr√£o)'],
        'valores': [0, 1, 2]
    },
    'SIRT1_rs7069102': {
        'nome': 'SIRT1',
        'gene': 'SIRT1 (Sirtu√≠na 1)',
        'funcao': 'Regula√ß√£o metab√≥lica e longevidade celular',
        'opcoes': ['T/T (Protetor)', 'T/C (Neutro)', 'C/C (Padr√£o)'],
        'valores': [0, 1, 2]
    },
    'TERT_rs2736100': {
        'nome': 'TERT',
        'gene': 'TERT (Telomerase)',
        'funcao': 'Manuten√ß√£o do comprimento dos tel√¥meros',
        'opcoes': ['G/G (Tel√¥meros+)', 'G/T (Neutro)', 'T/T (Tel√¥meros-)'],
        'valores': [0, 1, 2]
    }
}

# ==========================
# Interface Principal
# ==========================

st.title("üß¨ LiveMore - Preditor de Idade Biol√≥gica")
st.markdown("""
Descubra sua idade biol√≥gica usando Intelig√™ncia Artificial e obtenha insights personalizados sobre os fatores que afetam seu envelhecimento.

**Performance do Modelo:** R¬≤=0.92, MAE=2.79 anos | **Tecnologia:** Random Forest + SHAP (IA Explic√°vel)
""")

st.divider()

# ==========================
# Formul√°rio de Entrada
# ==========================

with st.sidebar:
    st.header("üìã Seu Perfil de Sa√∫de")
    st.markdown("*Preencha suas informa√ß√µes abaixo*")
    
    inputs = {}
    
    # Demografia
    st.subheader("üë§ Demografia")
    inputs['age'] = st.slider(
        "Idade (anos)", 
        25, 80, 45,
        help="Sua idade cronol√≥gica em anos"
    )
    
    gender_display = st.radio(
        "Sexo Biol√≥gico", 
        ["Masculino", "Feminino"],
        help="Sexo biol√≥gico (impacto m√≠nimo na predi√ß√£o: 0.1%)"
    )
    inputs['gender'] = 1 if gender_display == "Masculino" else 0
    
    # Gen√©tica
    st.subheader("üß¨ Fatores Gen√©ticos (SNPs)")
    st.markdown("*Selecione seu gen√≥tipo ou use 'N√£o sei' para valores padr√£o*")
    
    for snp_key, snp_data in SNP_INFO.items():
        opcoes_completas = snp_data['opcoes'] + ['N√£o sei / Padr√£o']
        
        with st.expander(f"{snp_data['nome']} - {snp_data['gene']}"):
            st.markdown(f"**Fun√ß√£o:** {snp_data['funcao']}")
            
            selecao = st.selectbox(
                f"Gen√≥tipo {snp_data['nome']}",
                opcoes_completas,
                index=len(opcoes_completas) - 1,
                key=snp_key,
                label_visibility="collapsed"
            )
            
            if selecao in snp_data['opcoes']:
                inputs[snp_key] = snp_data['valores'][snp_data['opcoes'].index(selecao)]
            else:
                inputs[snp_key] = 1  # Valor padr√£o neutro
    
    # Estilo de Vida
    st.subheader("üèÉ Estilo de Vida")
    
    inputs['exercise_hours_week'] = st.slider(
        "Exerc√≠cio (horas/semana)", 
        0.0, 20.0, 5.0, 0.5,
        help="Horas semanais de exerc√≠cio (padr√£o de retornos decrescentes)"
    )
    
    inputs['diet_quality_score'] = st.slider(
        "Qualidade da Dieta", 
        1, 10, 7,
        help="1=P√©ssima, 10=Excelente. Benef√≠cio quadr√°tico acima de 8"
    )
    
    inputs['sleep_hours'] = st.slider(
        "Sono (horas/noite)", 
        4.0, 10.0, 7.5, 0.5,
        help="Horas m√©dias de sono por noite. √ìtimo: 7.5h (curva em U)"
    )
    
    inputs['stress_level'] = st.slider(
        "N√≠vel de Estresse", 
        1, 10, 5,
        help="1=Baixo, 10=Alto. Padr√£o de dano exponencial em n√≠veis altos"
    )
    
    # Fatores de Risco
    st.subheader("‚ö†Ô∏è Fatores de Risco")
    
    inputs['smoking_pack_years'] = st.slider(
        "Tabagismo (ma√ßos-ano)", 
        0, 40, 0,
        help="Ma√ßos por dia √ó anos fumando. Fator de risco cr√≠tico (sempre prejudicial)"
    )
    
    inputs['alcohol_drinks_week'] = st.slider(
        "√Ålcool (doses/semana)", 
        0, 30, 5,
        help="Consumo semanal de √°lcool. Protetor ‚â§7, prejudicial >7"
    )
    
    st.divider()
    predict_button = st.button(
        "üîÆ Prever Minha Idade Biol√≥gica", 
        type="primary", 
        use_container_width=True
    )

# ==========================
# Predi√ß√£o e Resultados
# ==========================

if predict_button:
    with st.spinner("üîÑ Analisando seus dados..."):
        # Criar DataFrame de entrada
        df = pd.DataFrame([inputs], columns=FEATURES)
        
        # Predi√ß√£o
        X_scaled = scaler.transform(df)
        predicted_age = model.predict(X_scaled)[0]
        
        # Valores SHAP
        shap_values = explainer.shap_values(X_scaled)[0]
        
        # ==========================
        # Exibir Resultados
        # ==========================
        
        st.header("üìä Seus Resultados")
        
        col1, col2, col3 = st.columns(3)
        
        with col1:
            st.metric(
                "Idade Cronol√≥gica", 
                f"{inputs['age']} anos",
                help="Sua idade real em anos"
            )
        
        with col2:
            age_diff = predicted_age - inputs['age']
            st.metric(
                "Idade Biol√≥gica", 
                f"{predicted_age:.1f} anos",
                f"{age_diff:+.1f} anos",
                delta_color="inverse",
                help="Idade estimada pelo modelo baseada em seus fatores de sa√∫de"
            )
        
        with col3:
            st.metric(
                "Diferen√ßa Absoluta", 
                f"{abs(age_diff):.1f} anos",
                help="Diferen√ßa entre idade biol√≥gica e cronol√≥gica"
            )
        
        # Interpreta√ß√£o da diferen√ßa
        st.divider()
        
        if abs(age_diff) < 2:
            st.success("üéØ **Excelente!** Sua idade biol√≥gica corresponde √† sua idade cronol√≥gica.")
            st.markdown("Voc√™ est√° envelhecendo no ritmo esperado. Continue com seus h√°bitos saud√°veis!")
        elif age_diff < 0:
            years_younger = abs(age_diff)
            st.success(f"‚ú® **√ìtima not√≠cia!** Voc√™ √© biologicamente {years_younger:.1f} anos mais jovem que sua idade.")
            st.markdown("Seus h√°bitos de vida e/ou gen√©tica est√£o contribuindo para um envelhecimento mais lento!")
        elif age_diff < 5:
            st.warning(f"‚ö†Ô∏è Sua idade biol√≥gica est√° {age_diff:.1f} anos acima da cronol√≥gica.")
            st.markdown("Considere melhorias no estilo de vida. Veja as recomenda√ß√µes abaixo.")
        else:
            st.error(f"üî¥ **A√ß√£o necess√°ria:** Voc√™ est√° {age_diff:.1f} anos mais velho biologicamente.")
            st.markdown("Priorize interven√ß√µes de sa√∫de. Consulte um profissional e veja as recomenda√ß√µes abaixo.")
        
        # ==========================
        # An√°lise SHAP (IA Explic√°vel)
        # ==========================
        
        st.divider()
        st.header("üîç An√°lise de Contribui√ß√£o dos Fatores (SHAP)")
        st.markdown("""
        O gr√°fico abaixo mostra como cada fator contribui para sua idade biol√≥gica predita.
        - **Barras vermelhas** = fatores que aumentam sua idade biol√≥gica
        - **Barras verdes** = fatores que diminuem sua idade biol√≥gica
        - **Tamanho da barra** = magnitude do impacto (em anos)
        """)
        
        # Criar DataFrame para an√°lise SHAP
        feature_names_pt = [NAMES_PT[f] for f in FEATURES]
        shap_df = pd.DataFrame({
            'feature': feature_names_pt,
            'feature_en': FEATURES,
            'shap_value': shap_values,
            'abs_shap': np.abs(shap_values)
        }).sort_values('abs_shap', ascending=True)
        
        # Criar gr√°fico SHAP
        fig, ax = plt.subplots(figsize=(10, 8))
        
        colors = ['#d62728' if x > 0 else '#2ca02c' for x in shap_df['shap_value']]
        bars = ax.barh(shap_df['feature'], shap_df['shap_value'], color=colors, alpha=0.75)
        
        ax.axvline(0, color='black', linewidth=1.2, linestyle='-')
        ax.set_xlabel('Contribui√ß√£o para Idade Biol√≥gica (anos)', fontsize=13, fontweight='bold')
        ax.set_title('Impacto dos Fatores na Sua Idade Biol√≥gica', fontsize=15, fontweight='bold')
        ax.grid(axis='x', alpha=0.3, linestyle='--')
        
        # Adicionar valores nas barras
        for i, (feature, value) in enumerate(zip(shap_df['feature'], shap_df['shap_value'])):
            x_pos = value + (0.6 if value > 0 else -0.6)
            ax.text(
                x_pos, i, f'{value:+.1f}', 
                va='center', ha='left' if value > 0 else 'right',
                fontsize=11, fontweight='bold',
                color='darkred' if value > 0 else 'darkgreen'
            )
        
        plt.tight_layout()
        st.pyplot(fig)
        
        st.markdown("""
        **Como interpretar:**
        - Valores positivos aumentam sua idade biol√≥gica predita
        - Valores negativos diminuem sua idade biol√≥gica predita
        - Quanto maior o valor absoluto, maior o impacto do fator
        """)
        
        # ==========================
        # Recomenda√ß√µes Personalizadas
        # ==========================
        
        st.divider()
        st.header("üí° Recomenda√ß√µes Personalizadas")
        
        # Identificar top fatores negativos (aumentam idade)
        top_negative = shap_df[shap_df['shap_value'] > 0.5].sort_values('shap_value', ascending=False).head(3)
        
        if len(top_negative) > 0:
            st.markdown("### ‚ö†Ô∏è Priorize Melhorar Estes Fatores:")
            
            for idx, row in top_negative.iterrows():
                feature_key = row['feature_en']
                impact = row['shap_value']
                
                st.markdown(f"**{row['feature']}** (+{impact:.1f} anos)")
                
                # Recomenda√ß√µes espec√≠ficas por feature
                if feature_key == 'smoking_pack_years' and inputs[feature_key] > 0:
                    st.markdown("  - üö≠ Considere um programa de cessa√ß√£o do tabagismo")
                    st.markdown("  - üíä Consulte sobre terapias de reposi√ß√£o de nicotina")
                    
                elif feature_key == 'stress_level' and inputs[feature_key] > 6:
                    st.markdown("  - üßò Pratique t√©cnicas de relaxamento (medita√ß√£o, yoga)")
                    st.markdown("  - üóìÔ∏è Melhore gest√£o de tempo e prioridades")
                    st.markdown("  - üí¨ Considere suporte psicol√≥gico profissional")
                    
                elif feature_key == 'exercise_hours_week' and inputs[feature_key] < 3:
                    st.markdown("  - üèÉ Meta: 150 min/semana de exerc√≠cio moderado")
                    st.markdown("  - üö∂ Comece gradualmente: caminhadas de 20-30 min")
                    st.markdown("  - üí™ Inclua treino de for√ßa 2x/semana")
                    
                elif feature_key == 'diet_quality_score' and inputs[feature_key] < 7:
                    st.markdown("  - ü•ó Aumente consumo de vegetais e frutas")
                    st.markdown("  - üêü Inclua mais prote√≠nas magras e peixes")
                    st.markdown("  - üåæ Prefira gr√£os integrais e reduza processados")
                    
                elif feature_key == 'sleep_hours' and (inputs[feature_key] < 6.5 or inputs[feature_key] > 9):
                    st.markdown("  - üò¥ Meta: 7-8 horas de sono por noite")
                    st.markdown("  - üåô Estabele√ßa rotina de sono consistente")
                    st.markdown("  - üì± Evite telas 1h antes de dormir")
                    
                elif feature_key == 'alcohol_drinks_week' and inputs[feature_key] > 7:
                    st.markdown("  - üç∑ Reduza para ‚â§7 doses/semana")
                    st.markdown("  - üìÖ Estabele√ßa dias sem √°lcool")
                    
                elif feature_key in SNP_INFO:
                    snp_data = SNP_INFO[feature_key]
                    st.markdown(f"  - üß¨ Fator gen√©tico: {snp_data['funcao']}")
                    st.markdown("  - üíä Embora n√£o modific√°vel, otimize estilo de vida para compensar")
                    st.markdown("  - üë®‚Äç‚öïÔ∏è Discuta com seu m√©dico sobre acompanhamento preventivo")
        else:
            st.success("‚úÖ **Parab√©ns!** Nenhum fator negativo significativo identificado.")
        
        # Identificar top fatores protetores
        top_positive = shap_df[shap_df['shap_value'] < -0.5].sort_values('shap_value').head(3)
        
        if len(top_positive) > 0:
            st.markdown("### ‚úÖ Fatores Protetores (Continue assim!):")
            
            for idx, row in top_positive.iterrows():
                st.markdown(f"- **{row['feature']}** ({row['shap_value']:.1f} anos) - Excelente!")
        
        # ==========================
        # Insights sobre Import√¢ncia das Features
        # ==========================
        
        st.divider()
        st.header("üìà Import√¢ncia Global das Features")
        st.markdown("""
        Baseado no modelo treinado com 5.000 amostras, a import√¢ncia relativa das features √©:
        
        **Top 5 Features Mais Importantes:**
        1. **Estresse** (24.8%) - Impacto exponencial em n√≠veis altos
        2. **Idade** (23.8%) - Fator base do envelhecimento
        3. **Qualidade da Dieta** (18.0%) - Benef√≠cio quadr√°tico
        4. **Exerc√≠cio** (12.7%) - Retornos decrescentes
        5. **Sono** (7.4%) - Curva em U (√≥timo: 7-8h)
        
        **SNPs Gen√©ticos:** APOE (2.2%), SIRT1 (1.9%), TP53 (1.8%), TERT (1.5%), FOXO3 (1.3%)
        
        *Nota: Fatores gen√©ticos t√™m impacto menor mas interagem com estilo de vida.*
        """)

else:
    # ==========================
    # Tela Inicial (Antes da Predi√ß√£o)
    # ==========================
    
    st.info("üëà **Preencha o formul√°rio √† esquerda e clique em 'Prever Minha Idade Biol√≥gica'**")
    
    st.markdown("---")
    
    # Sobre o LiveMore
    st.header("üß¨ Sobre o LiveMore")
    
    st.markdown("""
    O **LiveMore** √© um preditor de idade biol√≥gica que usa Intelig√™ncia Artificial e fatores gen√©ticos 
    validados cientificamente para estimar como seu corpo est√° envelhecendo em compara√ß√£o √† sua idade cronol√≥gica.
    
    ### üìä Como Funciona
    
    O modelo analisa **13 fatores diferentes**:
    
    **1. Demografia (2 fatores)**
    - Idade cronol√≥gica
    - Sexo biol√≥gico
    
    **2. Gen√©tica - SNPs Validados (5 fatores)**
    - **APOE Œµ4** (rs429358) - Risco de Alzheimer e decl√≠nio cognitivo
    - **FOXO3** (rs2802292) - Gene da longevidade humana
    - **TP53** (rs1042522) - Reparo de DNA e supress√£o tumoral
    - **SIRT1** (rs7069102) - Regula√ß√£o metab√≥lica e sirtu√≠nas
    - **TERT** (rs2736100) - Manuten√ß√£o dos tel√¥meros
    
    **3. Estilo de Vida (4 fatores)**
    - Horas de exerc√≠cio por semana
    - Qualidade da dieta (escala 1-10)
    - Horas de sono por noite
    - N√≠vel de estresse (escala 1-10)
    
    **4. Fatores de Risco (2 fatores)**
    - Hist√≥rico de tabagismo (ma√ßos-ano)
    - Consumo de √°lcool (doses/semana)
    
    ### ü§ñ Tecnologia
    
    - **Modelo:** Random Forest com 200 √°rvores
    - **Performance:** R¬≤ = 0.92, Erro M√©dio = 2.79 anos
    - **Dataset:** 5.000 amostras sint√©ticas com padr√µes biom√©dicos validados
    - **Explicabilidade:** SHAP (SHapley Additive exPlanations) para IA interpret√°vel
    
    ### üéØ Import√¢ncia Relativa dos Fatores
    
    Baseado em an√°lise de 5.000 casos:
    
    | Fator | Import√¢ncia | Padr√£o de Impacto |
    |-------|-------------|-------------------|
    | **Estresse** | 24.8% | Exponencial em n√≠veis altos |
    | **Idade** | 23.8% | Linear (base do envelhecimento) |
    | **Dieta** | 18.0% | Quadr√°tico (benef√≠cio √≥timo 8-9) |
    | **Exerc√≠cio** | 12.7% | Retornos decrescentes |
    | **Sono** | 7.4% | Curva em U (√≥timo 7-8h) |
    | **Tabagismo** | 5.0% | Linear prejudicial |
    | **√Ålcool** | 3.2% | Protetor ‚â§7, prejudicial >7 |
    | **SNPs** | 5.1% | Intera√ß√£o com estilo de vida |
    
    ### üìà O Que Voc√™ Vai Receber
    
    Ap√≥s preencher o formul√°rio, voc√™ receber√°:
    
    1. **Sua Idade Biol√≥gica Estimada** - Compara√ß√£o com idade cronol√≥gica
    2. **An√°lise SHAP Personalizada** - Gr√°fico mostrando como cada fator contribui
    3. **Recomenda√ß√µes Espec√≠ficas** - A√ß√µes pr√°ticas para melhorar seus fatores de risco
    4. **Insights Cient√≠ficos** - Explica√ß√£o de como os fatores interagem
    
    ### ‚ö†Ô∏è Importante: Disclaimer
    
    Este √© um **prot√≥tipo de pesquisa acad√™mica** desenvolvido para fins educacionais e demonstra√ß√£o de IA explic√°vel.
    
    **N√ÉO substitui:**
    - Avalia√ß√£o m√©dica profissional
    - Exames laboratoriais reais
    - Testes gen√©ticos cl√≠nicos
    - Orienta√ß√£o de profissionais de sa√∫de
    
    **Limita√ß√µes:**
    - Modelo treinado em dados sint√©ticos (n√£o em pacientes reais)
    - N√£o valida clinicamente
    - Simplifica√ß√£o de processos biol√≥gicos complexos
    - Predi√ß√£o √© uma estimativa estat√≠stica, n√£o um diagn√≥stico
    
    Para decis√µes de sa√∫de, sempre consulte profissionais qualificados.
    
    ### üë®‚Äçüî¨ Sobre o Projeto
    
    **LiveMore V3** foi desenvolvido como parte de um Trabalho de Conclus√£o de Curso (TCC) sobre:
    - Aplica√ß√£o de Machine Learning em biomedicina
    - IA Explic√°vel (XAI) para sa√∫de
    - Integra√ß√£o de fatores gen√©ticos e estilo de vida
    - Predi√ß√£o de idade biol√≥gica e envelhecimento
    
    **Institui√ß√£o:** [Sua Universidade]  
    **Orientador:** [Nome do Professor]  
    **Ano:** 2025
    
    ---
    
    ### üöÄ Comece Agora!
    
    Preencha o formul√°rio √† esquerda com seus dados e descubra sua idade biol√≥gica!
    """)

